{"version":3,"sources":["../src/components/FormEntry.js"],"names":[],"mappings":"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","file":"FormEntry.js","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\nimport Immutable from 'immutable';\nimport AutoCompleteField from './AutoCompleteField'\nvar _ = require('lodash');\nimport {\n  BasicForm,\n  InputField,\n  SelectField,\n  TextareaField\n} from 'react-serial-forms'\nimport { validation } from 'react-serial-forms';\nvar validations = [{name:'confirmpass',operator:'===',reference:'password'}]\nvar FormEntry = React.createClass( {\n  getInitialState: function() {\n        return {\n          serialization: '',\n          addedPeople: Immutable.List(),\n          undoCache: Immutable.List(),\n          added:{}\n        };\n      },\n  propTypes: {\n    form: React.PropTypes.object.isRequired\n  },\n  createChoices: function(answers){\n    var choices = [];\n    var i;\n    for (i = 0; i < answers.length; i++) {\n      var answer = answers[i];\n      choices.push({text: answer.label, value: answer.concept});\n    }\n    return choices;\n  },\n  componentWillReceiveProps: function() {\n    var form = this.props.form;\n    if(!_.isEmpty(form)){\n      self = this;\n      self = this;\n      form.pages.forEach(function (page) {\n        page.sections.forEach(function (section) {\n          section.questions.forEach(function (question) {\n            if(question.type==='obsGroup' && question.questionOptions.rendering==='repeating'){\n              self.state['added'+ question.id] = Immutable.List()\n            }\n          })\n        })\n      })\n    }\n  },\n  addRepeating: function(question) {\n    var self = this;\n    var questionId = question.id\n    var personIndex = this.state['added'+questionId].size;\n    var personKey = 'questions'+'[' + personIndex + ']';\n    var name = questionId+'[' + personKey\n    var concept = questionId+'[concept]';\n    var update = function() {\n      self.forceUpdate();\n    };\n    var fields = []\n    {question.questions.map(function(q, key) {\n       //q.id = name+'['+q.id+']';\n       fields.push(self.renderQuestion(key,q,name,question.questionOptions.rendering))\n    })}\n    var person = (\n      <div key={personIndex} className='person'>\n      <InputField\n        type='hidden'\n        value={question.questionOptions.concept}\n        placeholder=''\n        onChange={update}\n        id={concept}\n       name={concept}\n      validation='required'/>\n        {fields}\n      </div>\n    );\n    this.setState(function(prev) {\n      var newState = {\n        undoCache: prev.undoCache.push(this.state['added'+questionId]),\n      }\n      newState['added'+questionId] = prev['added'+questionId].push(person)\n      return newState;\n    }, update);\n  },\n  renderQuestion: function(k,question,groupKey,rendering){\n    var questionId = question.id\n    var conceptKey=questionId+'[concept]'\n    var answerKey=questionId+'[answer]'\n    if (groupKey && rendering==='group'){\n      conceptKey=groupKey+'['+question.id+']'+'[concept]'\n      answerKey=groupKey+'['+question.id+']'+'[answer]'\n    }else if (groupKey && rendering==='repeating') {\n      conceptKey=groupKey+'['+question.id+']'+'[concept]'\n      answerKey=groupKey+'['+question.id+']'+'[answer]'\n    }\n    self = this;\n    var update = function() {\n      self.forceUpdate();\n    };\n    var input = '';\n    if(question.questionOptions.rendering==='number'){\n      input = <p key={k}>\n       <label htmlFor={questionId}>{question.label}</label>\n         <InputField\n           type='hidden'\n           placeholder=''\n           onChange={update}\n           id={conceptKey}\n           name={conceptKey}\n           value={question.questionOptions.concept}/>\n         <InputField\n           className=\"form-control\"\n           onChange={update}\n           type='number'\n           placeholder=''\n           id={answerKey}\n           name={answerKey}\n         validation='required'/>\n    </p>\n    }else if (question.questionOptions.rendering==='date') {\n      input = <p key={k}>\n       <label htmlFor={questionId}>{question.label}</label>\n         <InputField\n           type='hidden'\n           placeholder=''\n           onChange={update}\n           id={conceptKey}\n           name={conceptKey}\n           value={question.questionOptions.concept}/>\n         <InputField\n           className=\"form-control\"\n           onChange={update}\n           type='text'\n           placeholder=''\n           id={answerKey}\n           name={answerKey}\n         validation='required'/>\n    </p>\n    }else if (question.questionOptions.rendering==='select') {\n      //use https://github.com/JedWatson/react-select\n      var choices=[{text:'Please select',value:''}].concat(self.createChoices(question.questionOptions.answers));\n      input = <p key={k}>\n       <label htmlFor={question.id}>{question.label}</label>\n         <InputField\n           className=\"form-control\"\n           type='hidden'\n           placeholder=''\n           onChange={update}\n           id={conceptKey}\n          name={conceptKey}\n           value={question.questionOptions.concept}/>\n         <SelectField\n           className=\"form-control\"\n           onChange={update}\n           options={choices}\n           type='text'\n           placeholder=''\n           id={answerKey}\n           name={answerKey}\n         validation='required'/>\n    </p>\n    }\n    else if (question.questionOptions.rendering==='multiCheckbox') {\n      //use https://github.com/JedWatson/react-select\n      var choices=self.createChoices(question.questionOptions.answers);\n      input = <p key={k}>\n       <label htmlFor={questionId}>{question.label}</label>\n         <InputField\n           type='hidden'\n           placeholder=''\n           onChange={update}\n           id={conceptKey}\n           name={conceptKey}\n           value={question.questionOptions.concept}/>\n         <SelectField\n           className=\"form-control\"\n            multiple={true}\n           onChange={update}\n           options={choices}\n           type='text'\n           placeholder=''\n           id={answerKey}\n           name={answerKey}\n         validation='required'/>\n    </p>\n    }\n    else {\n      input = <p key={k}>\n       <label htmlFor={question.id}>{question.label}</label>\n         <InputField\n           type='hidden'\n           placeholder=''\n           onChange={update}\n           id={conceptKey}\n           name={conceptKey}\n           value={question.questionOptions.concept}\n         validation='required'/>\n         <InputField\n           className=\"form-control\"\n           type='text'\n           placeholder=''\n           onChange={update}\n           id={answerKey}\n           name={answerKey}\n         validation='required'/>\n    </p>\n    }\n    return input;\n  },\n  serialization: function() {\n        if (this.refs.myForm) {\n          return this.refs.myForm.serialize();\n        }\n        return {};\n      },\nonSubmit: function(event) {\n        var self = this;\n        console.log('Submitted. Checking async errors.');\n        this.refs.myForm.validate(function(errs) {\n          if (errs) {\n            alert('There are ' + errs.length + ' errors.');\n            alert('Check out your console to see them.');\n            console.log(errs);\n            return;\n          }\n          alert('All passed! No errors.');\n        });\n        event.preventDefault();\n      },\n  render: function() {\n    var self = this;\n    function renderGroup(question){\n      var fields = []\n      var questionId = question.id\n      var personIndex = 'n';\n      var personKey = 'questions'+'[' + 0 + ']';\n      var name = questionId+'[' + personKey\n      var concept = questionId+'[concept]';\n      var groupKey = questionId+'[questions]'\n\n      question.questions.map(function(q, key) {\n        var qId = q.id;\n        var name = name + '['+qId+']'\n        q.name = name;\n         fields.push(self.renderQuestion(key,q,groupKey+'['+key+']',question.questionOptions.rendering))\n      })\n      var person = (\n        <div key={personIndex} className='person'>\n        <InputField\n          type='hidden'\n          value={question.questionOptions.concept}\n          placeholder=''\n          {...attrs}\n          id={concept}\n         name={concept}\n        validation='required'/>\n          {fields}\n        </div>\n      );\n      return person;\n    }\n\n    function createChoices(answers){\n      var choices = [];\n      var i;\n      for (i = 0; i < answers.length; i++) {\n        var answer = answers[i];\n        choices.push({text: answer.label, value: answer.concept});\n      }\n      return choices;\n    }\n    var self = this;\n       var serialization = JSON.stringify(this.serialization(), null, 2);\n    // For the sake of this demo, update the json all the time.\n    function findDeep(obj, keyToFind) {\n    var result = null;\n\n    _.find(obj, function (value, key) {\n        if (key === keyToFind) {\n            return result = value;\n        } else if (_.isObject(value) && !_.isFunction(value)) {\n            return result = findDeep(value, keyToFind);\n        }\n    });\n\n    return result;\n}\n    var attrs = {\n         onChange: function() {\n          self.forceUpdate();\n         }\n       };\n       if(_.isEmpty(this.props.form)){\n         return null\n       }\n       validation.registerValidator({\n      name: 'confirmpass',\n      determine: function(value, pass, fail) {\n        var data = self.serialization();\n        var otherValue = findDeep(data,'password')\n        console.log(findDeep(data,'q12e').answer)\n        console.log('Value',value)\n        console.log('otherValue',otherValue)\n        if(value===otherValue){\n          return pass();\n        }else{\n          return fail();\n        }\n      },\n      message: 'Password Does not much'\n    });\n    var testData = [\n    {\n      \"id\": \"5507c0528152e61f3c348d56\",\n      \"name\": \"elit laborum et\",\n      \"size\": \"Large\"\n    },\n    {\n      \"id\": \"5507c0526305bceb0c0e2c7a\",\n      \"name\": \"dolor nulla velit\",\n      \"size\": \"Medium\"\n    }\n    ];\n    return (\n      <div>\n      <BasicForm ref='myForm' onKeyUp={this.onChange} onSubmit={this.onSubmit}>\n      <div className='container' >\n        <div className='row' >\n          <div className='col-md-6' >\n            <label>password:</label>\n        <InputField type='text' {...attrs}  name='password' />\n          <label>confirm:</label>\n        <InputField type='text' {...attrs}  validation='confirmpass' name='confirmPassword' />\n        <AutoCompleteField  {...attrs} dataSource={testData}  name='autoComplete'/>\n        {this.props.form.pages.map(function(page, i) {\n        return (\n          <div key={i}>\n          <div>\n            {page.sections.map(function(section, j) {\n              return (<div key={j} className=\"panel panel-primary\">\n              <div className=\"panel-heading\">\n                {section.label}\n                </div>\n                <div>\n                {section.questions.map(function(question, k) {\n                  if(question.type==='obs'){\n                    return (self.renderQuestion(k,question));\n                  }else if(question.type==='encounterDatetime'){\n                    return (self.renderQuestion(k,question));\n                  }else if (question.type==='encounterProvider') {\n                    return (self.renderQuestion(k,question));\n                  }\n                 else if (question.type==='encounterLocation') {\n                   return (self.renderQuestion(k,question));\n                 }else if (question.type==='personAttribute') {\n                   return (self.renderQuestion(k,question));\n                 }else if (question.type==='obsGroup' && question.questionOptions.rendering==='group') {\n                    return (<div  key={k}>\n                        {renderGroup(question)}\n                    </div>)\n                  }else if (question.type==='obsGroup' && question.questionOptions.rendering==='repeating') {\n                    if(_.isUndefined(self.state['added'+ question.id])){\n                      return null;\n                    }\n                    return (<div className='well' key={k}>\n                    <h2>{question.label}</h2>\n                    <button className='btn btn-primary' onClick={()=>self.addRepeating(question)} type='button'>Add</button>\n                    {\n                      self.state['added'+ question.id].map(function(person) {\n                      return person;\n                    })}\n\n\n                    </div>)\n                  }\n           })}\n           </div>\n              </div>);\n            })}\n\n          </div>\n           </div>\n        );\n      })}\n      </div>\n      <div className='col-md-6'>\n             <pre>\n               {serialization}\n             </pre>\n           </div>\n         </div>\n       </div>\n      </BasicForm>\n      </div>\n    );\n  }\n} );\nmodule.exports = FormEntry;\n"]}